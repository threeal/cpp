name: build
on:
  workflow_dispatch:
  pull_request:
    branches: ['*', '!*@latest']
  push:
    branches: ['*@latest', 'main']
jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Configure CMake
        run: |
          cmake . \
            -B build \
            -D BUILD_TESTING=ON

      - name: Check formatting
        run: |
          cmake --build build --target fix-format
          git diff --exit-code HEAD

      - name: Build project
        run: cmake --build build

      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure --no-tests=error

      - name: Check code coverage
        uses: threeal/gcovr-action@main
        with:
          excludes: |
            build/*
            test/*
          fail-under-line: 100

      - name: Check diff
        run: git diff --exit-code HEAD

  debug-msvc:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Configure CMake
        run: |
          cmake . `
            -B build `
            -D CMAKE_CXX_COMPILER=cl `
            -D BUILD_TESTING=ON

      - name: Build project
        run: cmake --build build

      - name: Run unit tests
        run: ctest --test-dir build --output-on-failure --no-tests=error

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Configure and build project
        uses: threeal/cmake-action@v1.3.0
        with:
          run-build: true

  release-msvc:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Configure and build project
        uses: threeal/cmake-action@v1.3.0
        with:
          cxx-compiler: cl
          run-build: true

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Install requirements
        run: pip3 install -r docs/requirements.txt

      - name: Build with Sphinx
        run: sphinx-build -b html docs build/docs -W --keep-going

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          path: build/docs
